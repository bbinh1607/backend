class BusinessError(Exception):
    """L·ªõp cha cho t·∫•t c·∫£ c√°c l·ªói business logic."""
    status_code = 400  # M·∫∑c ƒë·ªãnh l·ªói business l√† 400 Bad Request

    def __init__(self, message="Business logic error", status_code=None):
        super().__init__(message)
        self.message = message
        if status_code is not None:
            self.status_code = status_code

    def to_dict(self):
        """Chuy·ªÉn l·ªói th√†nh dict ƒë·ªÉ tr·∫£ v·ªÅ JSON."""
        return {
            "error": self.__class__.__name__,
            "message": self.message,
            "status_code": self.status_code
        }


# üéØ C√°c l·ªói business c·ª• th·ªÉ

class UserAlreadyExists(BusinessError):
    """L·ªói khi t·∫°o user v·ªõi username ƒë√£ t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("User already exists", 409)

class InsufficientBalance(BusinessError):
    """L·ªói khi user kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch."""
    def __init__(self):
        super().__init__("Insufficient balance", 402)

class UnauthorizedAction(BusinessError):
    """L·ªói khi user kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán h√†nh ƒë·ªông n√†y."""
    def __init__(self):
        super().__init__("You are not authorized to perform this action", 403)

class ComponentNotFound(BusinessError):
    """L·ªói khi component kh√¥ng t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("Component not found", 404)

class ComponentDetailNotFound(BusinessError):
    """L·ªói khi component detail kh√¥ng t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("Component detail not found", 404)

class CategoryNotFound(BusinessError):
    """L·ªói khi category kh√¥ng t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("Category not found", 404)

class DeviceNotFound(BusinessError):
    """L·ªói khi device kh√¥ng t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("Device not found", 404)

class DeviceDetailNotFound(BusinessError):
    """L·ªói khi device detail kh√¥ng t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("Device detail not found", 404)

class DeviceAlreadyExists(BusinessError):
    """L·ªói khi device ƒë√£ t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("Device already exists", 409)

class RefreshTokenNotFound(BusinessError):
    """L·ªói khi refresh token kh√¥ng t·ªìn t·∫°i."""
    def __init__(self):
        super().__init__("Refresh token not found", 404)

